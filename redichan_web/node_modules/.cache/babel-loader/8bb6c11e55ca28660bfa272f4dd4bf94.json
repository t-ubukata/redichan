{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PNG = void 0;\nconst pngSignature = 'PNG\\r\\n\\x1a\\n';\nconst pngImageHeaderChunkName = 'IHDR';\n// Used to detect \"fried\" png's: http://www.jongware.com/pngdefry.html\nconst pngFriedChunkName = 'CgBI';\nexports.PNG = {\n  validate(buffer) {\n    if (pngSignature === buffer.toString('ascii', 1, 8)) {\n      let chunkName = buffer.toString('ascii', 12, 16);\n      if (chunkName === pngFriedChunkName) {\n        chunkName = buffer.toString('ascii', 28, 32);\n      }\n      if (chunkName !== pngImageHeaderChunkName) {\n        throw new TypeError('Invalid PNG');\n      }\n      return true;\n    }\n    return false;\n  },\n  calculate(buffer) {\n    if (buffer.toString('ascii', 12, 16) === pngFriedChunkName) {\n      return {\n        height: buffer.readUInt32BE(36),\n        width: buffer.readUInt32BE(32)\n      };\n    }\n    return {\n      height: buffer.readUInt32BE(20),\n      width: buffer.readUInt32BE(16)\n    };\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","PNG","pngSignature","pngImageHeaderChunkName","pngFriedChunkName","validate","buffer","toString","chunkName","TypeError","calculate","height","readUInt32BE","width"],"sources":["/Users/admin/project/redichan_frontend/node_modules/image-size/dist/types/png.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PNG = void 0;\nconst pngSignature = 'PNG\\r\\n\\x1a\\n';\nconst pngImageHeaderChunkName = 'IHDR';\n// Used to detect \"fried\" png's: http://www.jongware.com/pngdefry.html\nconst pngFriedChunkName = 'CgBI';\nexports.PNG = {\n    validate(buffer) {\n        if (pngSignature === buffer.toString('ascii', 1, 8)) {\n            let chunkName = buffer.toString('ascii', 12, 16);\n            if (chunkName === pngFriedChunkName) {\n                chunkName = buffer.toString('ascii', 28, 32);\n            }\n            if (chunkName !== pngImageHeaderChunkName) {\n                throw new TypeError('Invalid PNG');\n            }\n            return true;\n        }\n        return false;\n    },\n    calculate(buffer) {\n        if (buffer.toString('ascii', 12, 16) === pngFriedChunkName) {\n            return {\n                height: buffer.readUInt32BE(36),\n                width: buffer.readUInt32BE(32)\n            };\n        }\n        return {\n            height: buffer.readUInt32BE(20),\n            width: buffer.readUInt32BE(16)\n        };\n    }\n};\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,GAAG,GAAG,KAAK,CAAC;AACpB,MAAMC,YAAY,GAAG,eAAe;AACpC,MAAMC,uBAAuB,GAAG,MAAM;AACtC;AACA,MAAMC,iBAAiB,GAAG,MAAM;AAChCL,OAAO,CAACE,GAAG,GAAG;EACVI,QAAQ,CAACC,MAAM,EAAE;IACb,IAAIJ,YAAY,KAAKI,MAAM,CAACC,QAAQ,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;MACjD,IAAIC,SAAS,GAAGF,MAAM,CAACC,QAAQ,CAAC,OAAO,EAAE,EAAE,EAAE,EAAE,CAAC;MAChD,IAAIC,SAAS,KAAKJ,iBAAiB,EAAE;QACjCI,SAAS,GAAGF,MAAM,CAACC,QAAQ,CAAC,OAAO,EAAE,EAAE,EAAE,EAAE,CAAC;MAChD;MACA,IAAIC,SAAS,KAAKL,uBAAuB,EAAE;QACvC,MAAM,IAAIM,SAAS,CAAC,aAAa,CAAC;MACtC;MACA,OAAO,IAAI;IACf;IACA,OAAO,KAAK;EAChB,CAAC;EACDC,SAAS,CAACJ,MAAM,EAAE;IACd,IAAIA,MAAM,CAACC,QAAQ,CAAC,OAAO,EAAE,EAAE,EAAE,EAAE,CAAC,KAAKH,iBAAiB,EAAE;MACxD,OAAO;QACHO,MAAM,EAAEL,MAAM,CAACM,YAAY,CAAC,EAAE,CAAC;QAC/BC,KAAK,EAAEP,MAAM,CAACM,YAAY,CAAC,EAAE;MACjC,CAAC;IACL;IACA,OAAO;MACHD,MAAM,EAAEL,MAAM,CAACM,YAAY,CAAC,EAAE,CAAC;MAC/BC,KAAK,EAAEP,MAAM,CAACM,YAAY,CAAC,EAAE;IACjC,CAAC;EACL;AACJ,CAAC"},"metadata":{},"sourceType":"script"}