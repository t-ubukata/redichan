{"ast":null,"code":"'use strict';\n\n/**\n * Is this value defined and not null?\n * @private\n */\nconst defined = function (val) {\n  return typeof val !== 'undefined' && val !== null;\n};\n\n/**\n * Is this value an object?\n * @private\n */\nconst object = function (val) {\n  return typeof val === 'object';\n};\n\n/**\n * Is this value a plain object?\n * @private\n */\nconst plainObject = function (val) {\n  return Object.prototype.toString.call(val) === '[object Object]';\n};\n\n/**\n * Is this value a function?\n * @private\n */\nconst fn = function (val) {\n  return typeof val === 'function';\n};\n\n/**\n * Is this value a boolean?\n * @private\n */\nconst bool = function (val) {\n  return typeof val === 'boolean';\n};\n\n/**\n * Is this value a Buffer object?\n * @private\n */\nconst buffer = function (val) {\n  return val instanceof Buffer;\n};\n\n/**\n * Is this value a typed array object?. E.g. Uint8Array or Uint8ClampedArray?\n * @private\n */\nconst typedArray = function (val) {\n  if (defined(val)) {\n    switch (val.constructor) {\n      case Uint8Array:\n      case Uint8ClampedArray:\n      case Int8Array:\n      case Uint16Array:\n      case Int16Array:\n      case Uint32Array:\n      case Int32Array:\n      case Float32Array:\n      case Float64Array:\n        return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Is this value a non-empty string?\n * @private\n */\nconst string = function (val) {\n  return typeof val === 'string' && val.length > 0;\n};\n\n/**\n * Is this value a real number?\n * @private\n */\nconst number = function (val) {\n  return typeof val === 'number' && !Number.isNaN(val);\n};\n\n/**\n * Is this value an integer?\n * @private\n */\nconst integer = function (val) {\n  return Number.isInteger(val);\n};\n\n/**\n * Is this value within an inclusive given range?\n * @private\n */\nconst inRange = function (val, min, max) {\n  return val >= min && val <= max;\n};\n\n/**\n * Is this value within the elements of an array?\n * @private\n */\nconst inArray = function (val, list) {\n  return list.includes(val);\n};\n\n/**\n * Create an Error with a message relating to an invalid parameter.\n *\n * @param {string} name - parameter name.\n * @param {string} expected - description of the type/value/range expected.\n * @param {*} actual - the value received.\n * @returns {Error} Containing the formatted message.\n * @private\n */\nconst invalidParameterError = function (name, expected, actual) {\n  return new Error(`Expected ${expected} for ${name} but received ${actual} of type ${typeof actual}`);\n};\nmodule.exports = {\n  defined: defined,\n  object: object,\n  plainObject: plainObject,\n  fn: fn,\n  bool: bool,\n  buffer: buffer,\n  typedArray: typedArray,\n  string: string,\n  number: number,\n  integer: integer,\n  inRange: inRange,\n  inArray: inArray,\n  invalidParameterError: invalidParameterError\n};","map":{"version":3,"names":["defined","val","object","plainObject","Object","prototype","toString","call","fn","bool","buffer","Buffer","typedArray","constructor","Uint8Array","Uint8ClampedArray","Int8Array","Uint16Array","Int16Array","Uint32Array","Int32Array","Float32Array","Float64Array","string","length","number","Number","isNaN","integer","isInteger","inRange","min","max","inArray","list","includes","invalidParameterError","name","expected","actual","Error","module","exports"],"sources":["/Users/admin/project/redichan_frontend/node_modules/sharp/lib/is.js"],"sourcesContent":["'use strict';\n\n/**\n * Is this value defined and not null?\n * @private\n */\nconst defined = function (val) {\n  return typeof val !== 'undefined' && val !== null;\n};\n\n/**\n * Is this value an object?\n * @private\n */\nconst object = function (val) {\n  return typeof val === 'object';\n};\n\n/**\n * Is this value a plain object?\n * @private\n */\nconst plainObject = function (val) {\n  return Object.prototype.toString.call(val) === '[object Object]';\n};\n\n/**\n * Is this value a function?\n * @private\n */\nconst fn = function (val) {\n  return typeof val === 'function';\n};\n\n/**\n * Is this value a boolean?\n * @private\n */\nconst bool = function (val) {\n  return typeof val === 'boolean';\n};\n\n/**\n * Is this value a Buffer object?\n * @private\n */\nconst buffer = function (val) {\n  return val instanceof Buffer;\n};\n\n/**\n * Is this value a typed array object?. E.g. Uint8Array or Uint8ClampedArray?\n * @private\n */\nconst typedArray = function (val) {\n  if (defined(val)) {\n    switch (val.constructor) {\n      case Uint8Array:\n      case Uint8ClampedArray:\n      case Int8Array:\n      case Uint16Array:\n      case Int16Array:\n      case Uint32Array:\n      case Int32Array:\n      case Float32Array:\n      case Float64Array:\n        return true;\n    }\n  }\n\n  return false;\n};\n\n/**\n * Is this value a non-empty string?\n * @private\n */\nconst string = function (val) {\n  return typeof val === 'string' && val.length > 0;\n};\n\n/**\n * Is this value a real number?\n * @private\n */\nconst number = function (val) {\n  return typeof val === 'number' && !Number.isNaN(val);\n};\n\n/**\n * Is this value an integer?\n * @private\n */\nconst integer = function (val) {\n  return Number.isInteger(val);\n};\n\n/**\n * Is this value within an inclusive given range?\n * @private\n */\nconst inRange = function (val, min, max) {\n  return val >= min && val <= max;\n};\n\n/**\n * Is this value within the elements of an array?\n * @private\n */\nconst inArray = function (val, list) {\n  return list.includes(val);\n};\n\n/**\n * Create an Error with a message relating to an invalid parameter.\n *\n * @param {string} name - parameter name.\n * @param {string} expected - description of the type/value/range expected.\n * @param {*} actual - the value received.\n * @returns {Error} Containing the formatted message.\n * @private\n */\nconst invalidParameterError = function (name, expected, actual) {\n  return new Error(\n    `Expected ${expected} for ${name} but received ${actual} of type ${typeof actual}`\n  );\n};\n\nmodule.exports = {\n  defined: defined,\n  object: object,\n  plainObject: plainObject,\n  fn: fn,\n  bool: bool,\n  buffer: buffer,\n  typedArray: typedArray,\n  string: string,\n  number: number,\n  integer: integer,\n  inRange: inRange,\n  inArray: inArray,\n  invalidParameterError: invalidParameterError\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}