{"ast":null,"code":"var _jsxFileName = \"/Users/admin/project/redichan_frontend/src/Thread.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport RedichanNav from 'RedichanNav';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'Board.css';\nimport Stack from 'react-bootstrap/Stack';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport consola from 'consola';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Thread = props => {\n  _s();\n  const {\n    id\n  } = props.match.params;\n  const location = useLocation();\n  const [thread, setThread] = useState(new Array());\n  const threadURI = `http://localhost:4000/api/thread/${id}`;\n  useEffect(() => {\n    const fetchThread = async () => {\n      const response = await fetch(threadURI);\n      const result = await response.json();\n      setThread(result);\n    };\n    fetchThread().catch(err => consola.error(err));\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Board mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(RedichanNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      className: \"mb-5\",\n      children: thread.map((post, index) => /*#__PURE__*/_jsxDEV(Container, {\n        className: \"bg-light border\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: index\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: post.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n      bg: \"light\",\n      variant: \"light\",\n      fixed: \"bottom\",\n      children: /*#__PURE__*/_jsxDEV(Nav, {\n        className: \"ms-auto\",\n        children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n          href: \"#start-a-thread\",\n          children: \"\\u2795\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Thread, \"fScc15/w1TqKa7DaqZAE1i8sLUU=\", false, function () {\n  return [useLocation];\n});\n_c = Thread;\nexport default Thread;\nvar _c;\n$RefreshReg$(_c, \"Thread\");","map":{"version":3,"names":["useState","useEffect","useLocation","RedichanNav","Stack","Nav","Navbar","consola","Container","Row","Col","Thread","props","id","match","params","location","thread","setThread","Array","threadURI","fetchThread","response","fetch","result","json","catch","err","error","map","post","index","text"],"sources":["/Users/admin/project/redichan_frontend/src/Thread.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport RedichanNav from 'RedichanNav';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'Board.css';\nimport Stack from 'react-bootstrap/Stack';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport consola from 'consola';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\ninterface Props {\n  match: {\n    params: {\n      id: number;\n    }\n  }\n}\n\ninterface Post {\n  id: number;\n  poster: string;\n  text: string;\n  UTCTimeStamp: Date;\n}\n\nconst Thread = (props: Props): JSX.Element => {\n  const {id} = props.match.params;\n\n  const location = useLocation();\n  const [thread, setThread] = useState(new Array<Post>());\n\n  const threadURI = `http://localhost:4000/api/thread/${id}`;\n\n  useEffect(() => {\n    const fetchThread = async () => {\n      const response = await fetch(threadURI);\n      const result = (await response.json()) as Array<Post>;\n      setThread(result);\n    };\n    fetchThread().catch((err) => consola.error(err));\n  }, [location]);\n\n  return (\n    <div className=\"Board mx-auto\">\n      <RedichanNav />\n      <Stack className=\"mb-5\">\n        {thread.map((post, index) => (\n          <Container className=\"bg-light border\">\n            <Row>\n              <Col>{index}</Col>\n            </Row>\n            <Row>\n              <Col>{post.text}</Col>\n            </Row>\n          </Container>\n        ))}\n      </Stack>\n      <Navbar bg=\"light\" variant=\"light\" fixed=\"bottom\">\n        <Nav className=\"ms-auto\">\n          <Nav.Link href=\"#start-a-thread\">âž•</Nav.Link>\n        </Nav>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Thread;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,aAAa;AACrC,OAAO,sCAAsC;AAC7C,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,OAAO,MAAM,SAAS;AAC7B,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AAAC;AAiBtC,MAAMC,MAAM,GAAIC,KAAY,IAAkB;EAAA;EAC5C,MAAM;IAACC;EAAE,CAAC,GAAGD,KAAK,CAACE,KAAK,CAACC,MAAM;EAE/B,MAAMC,QAAQ,GAAGd,WAAW,EAAE;EAC9B,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,IAAImB,KAAK,EAAQ,CAAC;EAEvD,MAAMC,SAAS,GAAI,oCAAmCP,EAAG,EAAC;EAE1DZ,SAAS,CAAC,MAAM;IACd,MAAMoB,WAAW,GAAG,YAAY;MAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,SAAS,CAAC;MACvC,MAAMI,MAAM,GAAI,MAAMF,QAAQ,CAACG,IAAI,EAAkB;MACrDP,SAAS,CAACM,MAAM,CAAC;IACnB,CAAC;IACDH,WAAW,EAAE,CAACK,KAAK,CAAEC,GAAG,IAAKpB,OAAO,CAACqB,KAAK,CAACD,GAAG,CAAC,CAAC;EAClD,CAAC,EAAE,CAACX,QAAQ,CAAC,CAAC;EAEd,oBACE;IAAK,SAAS,EAAC,eAAe;IAAA,wBAC5B,QAAC,WAAW;MAAA;MAAA;MAAA;IAAA,QAAG,eACf,QAAC,KAAK;MAAC,SAAS,EAAC,MAAM;MAAA,UACpBC,MAAM,CAACY,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACtB,QAAC,SAAS;QAAC,SAAS,EAAC,iBAAiB;QAAA,wBACpC,QAAC,GAAG;UAAA,uBACF,QAAC,GAAG;YAAA,UAAEA;UAAK;YAAA;YAAA;YAAA;UAAA;QAAO;UAAA;UAAA;UAAA;QAAA,QACd,eACN,QAAC,GAAG;UAAA,uBACF,QAAC,GAAG;YAAA,UAAED,IAAI,CAACE;UAAI;YAAA;YAAA;YAAA;UAAA;QAAO;UAAA;UAAA;UAAA;QAAA,QAClB;MAAA;QAAA;QAAA;QAAA;MAAA,QAET;IAAC;MAAA;MAAA;MAAA;IAAA,QACI,eACR,QAAC,MAAM;MAAC,EAAE,EAAC,OAAO;MAAC,OAAO,EAAC,OAAO;MAAC,KAAK,EAAC,QAAQ;MAAA,uBAC/C,QAAC,GAAG;QAAC,SAAS,EAAC,SAAS;QAAA,uBACtB,QAAC,GAAG,CAAC,IAAI;UAAC,IAAI,EAAC,iBAAiB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAa;QAAA;QAAA;QAAA;MAAA;IACzC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV,CAAC;AAAC,GAvCIrB,MAAM;EAAA,QAGOT,WAAW;AAAA;AAAA,KAHxBS,MAAM;AAyCZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module"}