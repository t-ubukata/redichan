{"ast":null,"code":"var _jsxFileName = \"/Users/admin/project/redichan_frontend/src/Board.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport RedichanNav from 'RedichanNav';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Stack from 'react-bootstrap/Stack';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport consola from 'consola';\nimport imageThumbnail from 'image-thumbnail';\n/* import Container from 'react-bootstrap/Container'; */\n/* import Row from 'react-bootstrap/Row'; */\n/* import Col from 'react-bootstrap/Col'; */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getImageThumbnail = async path => {\n  const options = {\n    width: 100,\n    height: 100,\n    fit: 'cover',\n    responseType: 'buffer'\n  };\n  // Returns Promise<Buffer>.\n  const thumbnail = await imageThumbnail(path, options);\n  const canvas = document.createElement(\"canvas\");\n  const ctx = canvas.getContext(\"2d\");\n};\nconst getVideoThumbnail = path => new Promise(resolve => {\n  const canvas = document.createElement(\"canvas\");\n  const video = document.createElement(\"video\");\n  video.autoplay = true;\n  video.muted = true;\n  video.src = path;\n  video.onloadeddata = () => {\n    const ctx = canvas.getContext(\"2d\");\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    ctx === null || ctx === void 0 ? void 0 : ctx.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\n    video.pause();\n    return resolve(canvas.toDataURL(\"image/png\"));\n  };\n});\nconst Board = props => {\n  _s();\n  const {\n    name\n  } = props;\n  let threadsURI = '';\n  switch (name) {\n    case 'enNews':\n      threadsURI = 'http://localhost:4000/en/news/threads/latest';\n      break;\n    case 'jaNews':\n      threadsURI = 'http://localhost:4000/ja/news/threads/latest';\n      break;\n    default:\n      throw new Error('Invalid board name');\n      break;\n  }\n  const [threads, setThreads] = useState(new Array());\n  useEffect(() => {\n    const fetchThreads = async () => {\n      const response = await fetch(threadsURI);\n      const result = await response.json();\n      setThreads(result);\n    };\n    fetchThreads().catch(err => consola.error(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Board mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(RedichanNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      className: \"mb-5\",\n      children: threads.map(thread => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-light border\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"img \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: thread.zeroPostTexts[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", thread.postNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n      bg: \"light\",\n      variant: \"light\",\n      fixed: \"bottom\",\n      children: /*#__PURE__*/_jsxDEV(Nav, {\n        className: \"ms-auto\",\n        children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n          href: \"#search\",\n          children: \"\\uD83D\\uDD0D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n          href: \"#start-a-thread\",\n          children: \"\\u2795\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"dtzKc5WqdNCB+5ELUn2yJq3Wc0c=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["useState","useEffect","RedichanNav","Stack","Nav","Navbar","consola","imageThumbnail","getImageThumbnail","path","options","width","height","fit","responseType","thumbnail","canvas","document","createElement","ctx","getContext","getVideoThumbnail","Promise","resolve","video","autoplay","muted","src","onloadeddata","videoWidth","videoHeight","drawImage","pause","toDataURL","Board","props","name","threadsURI","Error","threads","setThreads","Array","fetchThreads","response","fetch","result","json","catch","err","error","map","thread","zeroPostTexts","postNumber"],"sources":["/Users/admin/project/redichan_frontend/src/Board.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport RedichanNav from 'RedichanNav';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Stack from 'react-bootstrap/Stack';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport consola from 'consola';\nimport imageThumbnail from 'image-thumbnail';\n/* import Container from 'react-bootstrap/Container'; */\n/* import Row from 'react-bootstrap/Row'; */\n/* import Col from 'react-bootstrap/Col'; */\n\ninterface Props {\n  name: string;\n}\n\ninterface Thread {\n  id: number;\n  poster: string;\n  zeroPostTexts: Array<string>;\n  attachmentPath: string;\n  postNumber: number;\n  UTCTimestamp: Date;\n}\n\nconst getImageThumbnail = async (path: string) => {\n  const options = { width: 100, height: 100, fit: 'cover', responseType: 'buffer'};\n  // Returns Promise<Buffer>.\n  const thumbnail = await imageThumbnail(path, options);\n\n  const canvas = document.createElement(\"canvas\");\n  const ctx = canvas.getContext(\"2d\");\n}\n\nconst getVideoThumbnail = (path: string): Promise<string> =>\n  new Promise((resolve) => {\n    const canvas = document.createElement(\"canvas\");\n    const video = document.createElement(\"video\");\n\n    video.autoplay = true;\n    video.muted = true;\n    video.src = path;\n\n    video.onloadeddata = () => {\n      const ctx = canvas.getContext(\"2d\");\n\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n\n      ctx?.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\n      video.pause();\n      return resolve(canvas.toDataURL(\"image/png\"));\n    };\n  });\n\nconst Board = (props: Props): JSX.Element => {\n  const { name } = props;\n  let threadsURI = '';\n  switch (name) {\n    case 'enNews':\n      threadsURI = 'http://localhost:4000/en/news/threads/latest';\n      break;\n    case 'jaNews':\n      threadsURI = 'http://localhost:4000/ja/news/threads/latest';\n      break;\n    default:\n      throw new Error('Invalid board name');\n      break;\n  }\n\n  const [threads, setThreads] = useState(new Array<Thread>());\n\n  useEffect(() => {\n    const fetchThreads = async () => {\n      const response = await fetch(threadsURI);\n      const result = (await response.json()) as Array<Thread>;\n      setThreads(result);\n    };\n    fetchThreads().catch((err) => consola.error(err));\n  }, []);\n\n  return (\n    <div className=\"Board mx-auto\">\n      <RedichanNav />\n      <Stack className=\"mb-5\">\n        {threads.map((thread) => (\n          <div className=\"bg-light border\">\n            <span>img </span>\n            <span>{thread.zeroPostTexts[0]}</span>\n            <span> {thread.postNumber}</span>\n          </div>\n        ))}\n      </Stack>\n      <Navbar bg=\"light\" variant=\"light\" fixed=\"bottom\">\n        <Nav className=\"ms-auto\">\n          <Nav.Link href=\"#search\">üîç</Nav.Link>\n          <Nav.Link href=\"#start-a-thread\">‚ûï</Nav.Link>\n        </Nav>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Board;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}