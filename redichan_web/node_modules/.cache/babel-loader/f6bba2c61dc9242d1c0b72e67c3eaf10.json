{"ast":null,"code":"'use strict';\n\nconst is = require('./is');\n\n/**\n * Blend modes.\n * @member\n * @private\n */\nconst blend = {\n  clear: 'clear',\n  source: 'source',\n  over: 'over',\n  in: 'in',\n  out: 'out',\n  atop: 'atop',\n  dest: 'dest',\n  'dest-over': 'dest-over',\n  'dest-in': 'dest-in',\n  'dest-out': 'dest-out',\n  'dest-atop': 'dest-atop',\n  xor: 'xor',\n  add: 'add',\n  saturate: 'saturate',\n  multiply: 'multiply',\n  screen: 'screen',\n  overlay: 'overlay',\n  darken: 'darken',\n  lighten: 'lighten',\n  'colour-dodge': 'colour-dodge',\n  'color-dodge': 'colour-dodge',\n  'colour-burn': 'colour-burn',\n  'color-burn': 'colour-burn',\n  'hard-light': 'hard-light',\n  'soft-light': 'soft-light',\n  difference: 'difference',\n  exclusion: 'exclusion'\n};\n\n/**\n * Composite image(s) over the processed (resized, extracted etc.) image.\n *\n * The images to composite must be the same size or smaller than the processed image.\n * If both `top` and `left` options are provided, they take precedence over `gravity`.\n *\n * The `blend` option can be one of `clear`, `source`, `over`, `in`, `out`, `atop`,\n * `dest`, `dest-over`, `dest-in`, `dest-out`, `dest-atop`,\n * `xor`, `add`, `saturate`, `multiply`, `screen`, `overlay`, `darken`, `lighten`,\n * `colour-dodge`, `color-dodge`, `colour-burn`,`color-burn`,\n * `hard-light`, `soft-light`, `difference`, `exclusion`.\n *\n * More information about blend modes can be found at\n * https://www.libvips.org/API/current/libvips-conversion.html#VipsBlendMode\n * and https://www.cairographics.org/operators/\n *\n * @since 0.22.0\n *\n * @example\n * await sharp(background)\n *   .composite([\n *     { input: layer1, gravity: 'northwest' },\n *     { input: layer2, gravity: 'southeast' },\n *   ])\n *   .toFile('combined.png');\n *\n * @example\n * const output = await sharp('input.gif', { animated: true })\n *   .composite([\n *     { input: 'overlay.png', tile: true, blend: 'saturate' }\n *   ])\n *   .toBuffer();\n *\n * @example\n * sharp('input.png')\n *   .rotate(180)\n *   .resize(300)\n *   .flatten( { background: '#ff6600' } )\n *   .composite([{ input: 'overlay.png', gravity: 'southeast' }])\n *   .sharpen()\n *   .withMetadata()\n *   .webp( { quality: 90 } )\n *   .toBuffer()\n *   .then(function(outputBuffer) {\n *     // outputBuffer contains upside down, 300px wide, alpha channel flattened\n *     // onto orange background, composited with overlay.png with SE gravity,\n *     // sharpened, with metadata, 90% quality WebP image data. Phew!\n *   });\n *\n * @param {Object[]} images - Ordered list of images to composite\n * @param {Buffer|String} [images[].input] - Buffer containing image data, String containing the path to an image file, or Create object (see below)\n * @param {Object} [images[].input.create] - describes a blank overlay to be created.\n * @param {Number} [images[].input.create.width]\n * @param {Number} [images[].input.create.height]\n * @param {Number} [images[].input.create.channels] - 3-4\n * @param {String|Object} [images[].input.create.background] - parsed by the [color](https://www.npmjs.org/package/color) module to extract values for red, green, blue and alpha.\n * @param {String} [images[].blend='over'] - how to blend this image with the image below.\n * @param {String} [images[].gravity='centre'] - gravity at which to place the overlay.\n * @param {Number} [images[].top] - the pixel offset from the top edge.\n * @param {Number} [images[].left] - the pixel offset from the left edge.\n * @param {Boolean} [images[].tile=false] - set to true to repeat the overlay image across the entire image with the given `gravity`.\n * @param {Boolean} [images[].premultiplied=false] - set to true to avoid premultipling the image below. Equivalent to the `--premultiplied` vips option.\n * @param {Number} [images[].density=72] - number representing the DPI for vector overlay image.\n * @param {Object} [images[].raw] - describes overlay when using raw pixel data.\n * @param {Number} [images[].raw.width]\n * @param {Number} [images[].raw.height]\n * @param {Number} [images[].raw.channels]\n * @param {boolean} [images[].animated=false] - Set to `true` to read all frames/pages of an animated image.\n * @param {string} [images[].failOn='warning'] - @see {@link /api-constructor#parameters|constructor parameters}\n * @param {number|boolean} [images[].limitInputPixels=268402689] - @see {@link /api-constructor#parameters|constructor parameters}\n * @returns {Sharp}\n * @throws {Error} Invalid parameters\n */\nfunction composite(images) {\n  if (!Array.isArray(images)) {\n    throw is.invalidParameterError('images to composite', 'array', images);\n  }\n  this.options.composite = images.map(image => {\n    if (!is.object(image)) {\n      throw is.invalidParameterError('image to composite', 'object', image);\n    }\n    const inputOptions = this._inputOptionsFromObject(image);\n    const composite = {\n      input: this._createInputDescriptor(image.input, inputOptions, {\n        allowStream: false\n      }),\n      blend: 'over',\n      tile: false,\n      left: 0,\n      top: 0,\n      hasOffset: false,\n      gravity: 0,\n      premultiplied: false\n    };\n    if (is.defined(image.blend)) {\n      if (is.string(blend[image.blend])) {\n        composite.blend = blend[image.blend];\n      } else {\n        throw is.invalidParameterError('blend', 'valid blend name', image.blend);\n      }\n    }\n    if (is.defined(image.tile)) {\n      if (is.bool(image.tile)) {\n        composite.tile = image.tile;\n      } else {\n        throw is.invalidParameterError('tile', 'boolean', image.tile);\n      }\n    }\n    if (is.defined(image.left)) {\n      if (is.integer(image.left)) {\n        composite.left = image.left;\n      } else {\n        throw is.invalidParameterError('left', 'integer', image.left);\n      }\n    }\n    if (is.defined(image.top)) {\n      if (is.integer(image.top)) {\n        composite.top = image.top;\n      } else {\n        throw is.invalidParameterError('top', 'integer', image.top);\n      }\n    }\n    if (is.defined(image.top) !== is.defined(image.left)) {\n      throw new Error('Expected both left and top to be set');\n    } else {\n      composite.hasOffset = is.integer(image.top) && is.integer(image.left);\n    }\n    if (is.defined(image.gravity)) {\n      if (is.integer(image.gravity) && is.inRange(image.gravity, 0, 8)) {\n        composite.gravity = image.gravity;\n      } else if (is.string(image.gravity) && is.integer(this.constructor.gravity[image.gravity])) {\n        composite.gravity = this.constructor.gravity[image.gravity];\n      } else {\n        throw is.invalidParameterError('gravity', 'valid gravity', image.gravity);\n      }\n    }\n    if (is.defined(image.premultiplied)) {\n      if (is.bool(image.premultiplied)) {\n        composite.premultiplied = image.premultiplied;\n      } else {\n        throw is.invalidParameterError('premultiplied', 'boolean', image.premultiplied);\n      }\n    }\n    return composite;\n  });\n  return this;\n}\n\n/**\n * Decorate the Sharp prototype with composite-related functions.\n * @private\n */\nmodule.exports = function (Sharp) {\n  Sharp.prototype.composite = composite;\n  Sharp.blend = blend;\n};","map":{"version":3,"names":["is","require","blend","clear","source","over","in","out","atop","dest","xor","add","saturate","multiply","screen","overlay","darken","lighten","difference","exclusion","composite","images","Array","isArray","invalidParameterError","options","map","image","object","inputOptions","_inputOptionsFromObject","input","_createInputDescriptor","allowStream","tile","left","top","hasOffset","gravity","premultiplied","defined","string","bool","integer","Error","inRange","constructor","module","exports","Sharp","prototype"],"sources":["/Users/admin/project/redichan_frontend/node_modules/sharp/lib/composite.js"],"sourcesContent":["'use strict';\n\nconst is = require('./is');\n\n/**\n * Blend modes.\n * @member\n * @private\n */\nconst blend = {\n  clear: 'clear',\n  source: 'source',\n  over: 'over',\n  in: 'in',\n  out: 'out',\n  atop: 'atop',\n  dest: 'dest',\n  'dest-over': 'dest-over',\n  'dest-in': 'dest-in',\n  'dest-out': 'dest-out',\n  'dest-atop': 'dest-atop',\n  xor: 'xor',\n  add: 'add',\n  saturate: 'saturate',\n  multiply: 'multiply',\n  screen: 'screen',\n  overlay: 'overlay',\n  darken: 'darken',\n  lighten: 'lighten',\n  'colour-dodge': 'colour-dodge',\n  'color-dodge': 'colour-dodge',\n  'colour-burn': 'colour-burn',\n  'color-burn': 'colour-burn',\n  'hard-light': 'hard-light',\n  'soft-light': 'soft-light',\n  difference: 'difference',\n  exclusion: 'exclusion'\n};\n\n/**\n * Composite image(s) over the processed (resized, extracted etc.) image.\n *\n * The images to composite must be the same size or smaller than the processed image.\n * If both `top` and `left` options are provided, they take precedence over `gravity`.\n *\n * The `blend` option can be one of `clear`, `source`, `over`, `in`, `out`, `atop`,\n * `dest`, `dest-over`, `dest-in`, `dest-out`, `dest-atop`,\n * `xor`, `add`, `saturate`, `multiply`, `screen`, `overlay`, `darken`, `lighten`,\n * `colour-dodge`, `color-dodge`, `colour-burn`,`color-burn`,\n * `hard-light`, `soft-light`, `difference`, `exclusion`.\n *\n * More information about blend modes can be found at\n * https://www.libvips.org/API/current/libvips-conversion.html#VipsBlendMode\n * and https://www.cairographics.org/operators/\n *\n * @since 0.22.0\n *\n * @example\n * await sharp(background)\n *   .composite([\n *     { input: layer1, gravity: 'northwest' },\n *     { input: layer2, gravity: 'southeast' },\n *   ])\n *   .toFile('combined.png');\n *\n * @example\n * const output = await sharp('input.gif', { animated: true })\n *   .composite([\n *     { input: 'overlay.png', tile: true, blend: 'saturate' }\n *   ])\n *   .toBuffer();\n *\n * @example\n * sharp('input.png')\n *   .rotate(180)\n *   .resize(300)\n *   .flatten( { background: '#ff6600' } )\n *   .composite([{ input: 'overlay.png', gravity: 'southeast' }])\n *   .sharpen()\n *   .withMetadata()\n *   .webp( { quality: 90 } )\n *   .toBuffer()\n *   .then(function(outputBuffer) {\n *     // outputBuffer contains upside down, 300px wide, alpha channel flattened\n *     // onto orange background, composited with overlay.png with SE gravity,\n *     // sharpened, with metadata, 90% quality WebP image data. Phew!\n *   });\n *\n * @param {Object[]} images - Ordered list of images to composite\n * @param {Buffer|String} [images[].input] - Buffer containing image data, String containing the path to an image file, or Create object (see below)\n * @param {Object} [images[].input.create] - describes a blank overlay to be created.\n * @param {Number} [images[].input.create.width]\n * @param {Number} [images[].input.create.height]\n * @param {Number} [images[].input.create.channels] - 3-4\n * @param {String|Object} [images[].input.create.background] - parsed by the [color](https://www.npmjs.org/package/color) module to extract values for red, green, blue and alpha.\n * @param {String} [images[].blend='over'] - how to blend this image with the image below.\n * @param {String} [images[].gravity='centre'] - gravity at which to place the overlay.\n * @param {Number} [images[].top] - the pixel offset from the top edge.\n * @param {Number} [images[].left] - the pixel offset from the left edge.\n * @param {Boolean} [images[].tile=false] - set to true to repeat the overlay image across the entire image with the given `gravity`.\n * @param {Boolean} [images[].premultiplied=false] - set to true to avoid premultipling the image below. Equivalent to the `--premultiplied` vips option.\n * @param {Number} [images[].density=72] - number representing the DPI for vector overlay image.\n * @param {Object} [images[].raw] - describes overlay when using raw pixel data.\n * @param {Number} [images[].raw.width]\n * @param {Number} [images[].raw.height]\n * @param {Number} [images[].raw.channels]\n * @param {boolean} [images[].animated=false] - Set to `true` to read all frames/pages of an animated image.\n * @param {string} [images[].failOn='warning'] - @see {@link /api-constructor#parameters|constructor parameters}\n * @param {number|boolean} [images[].limitInputPixels=268402689] - @see {@link /api-constructor#parameters|constructor parameters}\n * @returns {Sharp}\n * @throws {Error} Invalid parameters\n */\nfunction composite (images) {\n  if (!Array.isArray(images)) {\n    throw is.invalidParameterError('images to composite', 'array', images);\n  }\n  this.options.composite = images.map(image => {\n    if (!is.object(image)) {\n      throw is.invalidParameterError('image to composite', 'object', image);\n    }\n    const inputOptions = this._inputOptionsFromObject(image);\n    const composite = {\n      input: this._createInputDescriptor(image.input, inputOptions, { allowStream: false }),\n      blend: 'over',\n      tile: false,\n      left: 0,\n      top: 0,\n      hasOffset: false,\n      gravity: 0,\n      premultiplied: false\n    };\n    if (is.defined(image.blend)) {\n      if (is.string(blend[image.blend])) {\n        composite.blend = blend[image.blend];\n      } else {\n        throw is.invalidParameterError('blend', 'valid blend name', image.blend);\n      }\n    }\n    if (is.defined(image.tile)) {\n      if (is.bool(image.tile)) {\n        composite.tile = image.tile;\n      } else {\n        throw is.invalidParameterError('tile', 'boolean', image.tile);\n      }\n    }\n    if (is.defined(image.left)) {\n      if (is.integer(image.left)) {\n        composite.left = image.left;\n      } else {\n        throw is.invalidParameterError('left', 'integer', image.left);\n      }\n    }\n    if (is.defined(image.top)) {\n      if (is.integer(image.top)) {\n        composite.top = image.top;\n      } else {\n        throw is.invalidParameterError('top', 'integer', image.top);\n      }\n    }\n    if (is.defined(image.top) !== is.defined(image.left)) {\n      throw new Error('Expected both left and top to be set');\n    } else {\n      composite.hasOffset = is.integer(image.top) && is.integer(image.left);\n    }\n    if (is.defined(image.gravity)) {\n      if (is.integer(image.gravity) && is.inRange(image.gravity, 0, 8)) {\n        composite.gravity = image.gravity;\n      } else if (is.string(image.gravity) && is.integer(this.constructor.gravity[image.gravity])) {\n        composite.gravity = this.constructor.gravity[image.gravity];\n      } else {\n        throw is.invalidParameterError('gravity', 'valid gravity', image.gravity);\n      }\n    }\n    if (is.defined(image.premultiplied)) {\n      if (is.bool(image.premultiplied)) {\n        composite.premultiplied = image.premultiplied;\n      } else {\n        throw is.invalidParameterError('premultiplied', 'boolean', image.premultiplied);\n      }\n    }\n    return composite;\n  });\n  return this;\n}\n\n/**\n * Decorate the Sharp prototype with composite-related functions.\n * @private\n */\nmodule.exports = function (Sharp) {\n  Sharp.prototype.composite = composite;\n  Sharp.blend = blend;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}