{"ast":null,"code":"var _jsxFileName = \"/Users/admin/project/redichan_frontend/src/Thread.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport RedichanNav from 'RedichanNav';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'Thread.css';\nimport { Link } from 'react-router-dom';\nimport Stack from 'react-bootstrap/Stack';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport consola from 'consola';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { APIOrigin } from 'redichanUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Thread = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  // id's type is strig | undifined.\n  if (id === undefined) {\n    throw new TypeError(`Expected 'id' to be defined, but received undefined`);\n  }\n  const threadURI = `${APIOrigin}/api/thread/${id}`;\n  const [thread, setThread] = useState(new Array());\n  useEffect(() => {\n    const fetchThread = async () => {\n      const response = await fetch(threadURI);\n      const result = await response.json();\n      setThread(result);\n    };\n    fetchThread().catch(err => consola.error(err));\n  }, [id]);\n  const postPath = `/thread/${id}/post`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(RedichanNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      className: \"mb-5\",\n      children: [thread.map((post, index) => /*#__PURE__*/_jsxDEV(Container, {\n        className: \"bg-light border\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: index\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            className: \"post-text\",\n            children: post.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n      bg: \"light\",\n      variant: \"light\",\n      fixed: \"bottom\",\n      children: /*#__PURE__*/_jsxDEV(Nav, {\n        className: \"ms-auto\",\n        children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n          as: Link,\n          to: postPath,\n          children: \"\\u2795\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Thread, \"cg0qbeaFidZdWD1Ho/f7tpq5mOs=\", false, function () {\n  return [useParams];\n});\n_c = Thread;\nexport default Thread;\nvar _c;\n$RefreshReg$(_c, \"Thread\");","map":{"version":3,"names":["useState","useEffect","useParams","RedichanNav","Link","Stack","Nav","Navbar","consola","Container","Row","Col","APIOrigin","Thread","id","undefined","TypeError","threadURI","thread","setThread","Array","fetchThread","response","fetch","result","json","catch","err","error","postPath","map","post","index","text"],"sources":["/Users/admin/project/redichan_frontend/src/Thread.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport RedichanNav from 'RedichanNav';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'Thread.css';\nimport { Link } from 'react-router-dom';\nimport Stack from 'react-bootstrap/Stack';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport consola from 'consola';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { APIOrigin } from 'redichanUtils';\n\ninterface Post {\n  id: number;\n  poster: string;\n  text: string;\n  UTCTimeStamp: Date;\n}\n\nconst Thread = (): JSX.Element => {\n  const { id } = useParams();\n  // id's type is strig | undifined.\n  if (id === undefined) {\n    throw new TypeError(`Expected 'id' to be defined, but received undefined`);\n  }\n\n  const threadURI = `${APIOrigin}/api/thread/${id}`;\n\n  const [thread, setThread] = useState(new Array<Post>());\n\n  useEffect(() => {\n    const fetchThread = async () => {\n      const response = await fetch(threadURI);\n      const result = (await response.json()) as Array<Post>;\n      setThread(result);\n    };\n    fetchThread().catch((err) => consola.error(err));\n  }, [id]);\n\n  const postPath = `/thread/${id}/post`;\n\n  return (\n    <div className=\"mx-auto\">\n      <RedichanNav />\n      <Stack className=\"mb-5\">\n        {thread.map((post, index) => (\n          <Container key={post.id} className=\"bg-light border\">\n            <Row>\n              <Col>{index}</Col>\n            </Row>\n            <Row>\n              <Col className=\"post-text\">{post.text}</Col>\n            </Row>\n          </Container>\n        ))}\n        {/* br for layout. */}\n        <br />\n      </Stack>\n      <Navbar bg=\"light\" variant=\"light\" fixed=\"bottom\">\n        <Nav className=\"ms-auto\">\n          <Nav.Link as={Link} to={postPath}>âž•</Nav.Link>\n        </Nav>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Thread;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,WAAW,MAAM,aAAa;AACrC,OAAO,sCAAsC;AAC7C,OAAO,YAAY;AACnB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,OAAO,MAAM,SAAS;AAC7B,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,SAASC,SAAS,QAAQ,eAAe;AAAC;AAS1C,MAAMC,MAAM,GAAG,MAAmB;EAAA;EAChC,MAAM;IAAEC;EAAG,CAAC,GAAGZ,SAAS,EAAE;EAC1B;EACA,IAAIY,EAAE,KAAKC,SAAS,EAAE;IACpB,MAAM,IAAIC,SAAS,CAAE,qDAAoD,CAAC;EAC5E;EAEA,MAAMC,SAAS,GAAI,GAAEL,SAAU,eAAcE,EAAG,EAAC;EAEjD,MAAM,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,IAAIoB,KAAK,EAAQ,CAAC;EAEvDnB,SAAS,CAAC,MAAM;IACd,MAAMoB,WAAW,GAAG,YAAY;MAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,SAAS,CAAC;MACvC,MAAMO,MAAM,GAAI,MAAMF,QAAQ,CAACG,IAAI,EAAkB;MACrDN,SAAS,CAACK,MAAM,CAAC;IACnB,CAAC;IACDH,WAAW,EAAE,CAACK,KAAK,CAAEC,GAAG,IAAKnB,OAAO,CAACoB,KAAK,CAACD,GAAG,CAAC,CAAC;EAClD,CAAC,EAAE,CAACb,EAAE,CAAC,CAAC;EAER,MAAMe,QAAQ,GAAI,WAAUf,EAAG,OAAM;EAErC,oBACE;IAAK,SAAS,EAAC,SAAS;IAAA,wBACtB,QAAC,WAAW;MAAA;MAAA;MAAA;IAAA,QAAG,eACf,QAAC,KAAK;MAAC,SAAS,EAAC,MAAM;MAAA,WACpBI,MAAM,CAACY,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACtB,QAAC,SAAS;QAAe,SAAS,EAAC,iBAAiB;QAAA,wBAClD,QAAC,GAAG;UAAA,uBACF,QAAC,GAAG;YAAA,UAAEA;UAAK;YAAA;YAAA;YAAA;UAAA;QAAO;UAAA;UAAA;UAAA;QAAA,QACd,eACN,QAAC,GAAG;UAAA,uBACF,QAAC,GAAG;YAAC,SAAS,EAAC,WAAW;YAAA,UAAED,IAAI,CAACE;UAAI;YAAA;YAAA;YAAA;UAAA;QAAO;UAAA;UAAA;UAAA;QAAA,QACxC;MAAA,GANQF,IAAI,CAACjB,EAAE;QAAA;QAAA;QAAA;MAAA,QAQxB,CAAC,eAEF;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QACA,eACR,QAAC,MAAM;MAAC,EAAE,EAAC,OAAO;MAAC,OAAO,EAAC,OAAO;MAAC,KAAK,EAAC,QAAQ;MAAA,uBAC/C,QAAC,GAAG;QAAC,SAAS,EAAC,SAAS;QAAA,uBACtB,QAAC,GAAG,CAAC,IAAI;UAAC,EAAE,EAAEV,IAAK;UAAC,EAAE,EAAEyB,QAAS;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAa;QAAA;QAAA;QAAA;MAAA;IAC1C;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV,CAAC;AAAC,GA9CIhB,MAAM;EAAA,QACKX,SAAS;AAAA;AAAA,KADpBW,MAAM;AAgDZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module"}