{"ast":null,"code":"var _jsxFileName = \"/Users/admin/project/redichan_frontend/src/StartThread.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport RedichanNav from 'RedichanNav';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Stack from 'react-bootstrap/Stack';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StartThread = props => {\n  _s();\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const [data, setData] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"StartThread mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(RedichanNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      className: \"mb-5\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(postData => fetch('http://localhost:4000/api/thread', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(postData)\n          })),\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              ...register('text')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              \"aria-label\": \"close\",\n              type: \"button\",\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(StartThread, \"K24D+q8JCpYnhqQIfaJqXstEmpk=\", false, function () {\n  return [useForm];\n});\n_c = StartThread;\nexport default StartThread;\nvar _c;\n$RefreshReg$(_c, \"StartThread\");","map":{"version":3,"names":["useState","useForm","RedichanNav","Stack","Container","Row","StartThread","props","register","handleSubmit","data","setData","postData","fetch","method","headers","body","JSON","stringify"],"sources":["/Users/admin/project/redichan_frontend/src/StartThread.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport RedichanNav from 'RedichanNav';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport consola from 'consola';\nimport Stack from 'react-bootstrap/Stack';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\ninterface Props {\n  boardName: string;\n}\n\nconst StartThread = (props: Props): JSX.Element => {\n  const { register, handleSubmit } = useForm();\n  const [data, setData] = useState('');\n\n  return (\n    <div className=\"StartThread mx-auto\">\n      <RedichanNav />\n      <Stack className=\"mb-5\">\n      <Container>\n      <form\n        onSubmit={handleSubmit((postData) =>\n          fetch('http://localhost:4000/api/thread', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(postData),\n          })\n        )}\n      >\n        <Row>\n        <textarea {...register('text')} />\n        </Row>\n        <Row>\n        <button aria-label=\"close\" type=\"button\">Close</button>\n        <input type=\"submit\" />\n        </Row>\n      </form>\n      </Container>\n      </Stack>\n    </div>\n  );\n};\n\nexport default StartThread;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,OAAO,QAAQ,iBAAiB;AACzC,OAAOC,WAAW,MAAM,aAAa;AACrC,OAAO,sCAAsC;AAE7C,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,GAAG,MAAM,qBAAqB;AAAC;AAOtC,MAAMC,WAAW,GAAIC,KAAY,IAAkB;EAAA;EACjD,MAAM;IAAEC,QAAQ;IAAEC;EAAa,CAAC,GAAGR,OAAO,EAAE;EAC5C,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpC,oBACE;IAAK,SAAS,EAAC,qBAAqB;IAAA,wBAClC,QAAC,WAAW;MAAA;MAAA;MAAA;IAAA,QAAG,eACf,QAAC,KAAK;MAAC,SAAS,EAAC,MAAM;MAAA,uBACvB,QAAC,SAAS;QAAA,uBACV;UACE,QAAQ,EAAES,YAAY,CAAEG,QAAQ,IAC9BC,KAAK,CAAC,kCAAkC,EAAE;YACxCC,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACP,cAAc,EAAE;YAClB,CAAC;YACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ;UAC/B,CAAC,CAAC,CACF;UAAA,wBAEF,QAAC,GAAG;YAAA,uBACJ;cAAA,GAAcJ,QAAQ,CAAC,MAAM;YAAC;cAAA;cAAA;cAAA;YAAA;UAAI;YAAA;YAAA;YAAA;UAAA,QAC5B,eACN,QAAC,GAAG;YAAA,wBACJ;cAAQ,cAAW,OAAO;cAAC,IAAI,EAAC,QAAQ;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAe,eACvD;cAAO,IAAI,EAAC;YAAQ;cAAA;cAAA;cAAA;YAAA,QAAG;UAAA;YAAA;YAAA;YAAA;UAAA,QACjB;QAAA;UAAA;UAAA;UAAA;QAAA;MACD;QAAA;QAAA;QAAA;MAAA;IACK;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV,CAAC;AAAC,GAhCIF,WAAW;EAAA,QACoBL,OAAO;AAAA;AAAA,KADtCK,WAAW;AAkCjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}