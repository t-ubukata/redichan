{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WEBP = void 0;\nfunction calculateExtended(buffer) {\n  return {\n    height: 1 + buffer.readUIntLE(7, 3),\n    width: 1 + buffer.readUIntLE(4, 3)\n  };\n}\nfunction calculateLossless(buffer) {\n  return {\n    height: 1 + ((buffer[4] & 0xF) << 10 | buffer[3] << 2 | (buffer[2] & 0xC0) >> 6),\n    width: 1 + ((buffer[2] & 0x3F) << 8 | buffer[1])\n  };\n}\nfunction calculateLossy(buffer) {\n  // `& 0x3fff` returns the last 14 bits\n  // TO-DO: include webp scaling in the calculations\n  return {\n    height: buffer.readInt16LE(8) & 0x3fff,\n    width: buffer.readInt16LE(6) & 0x3fff\n  };\n}\nexports.WEBP = {\n  validate(buffer) {\n    const riffHeader = 'RIFF' === buffer.toString('ascii', 0, 4);\n    const webpHeader = 'WEBP' === buffer.toString('ascii', 8, 12);\n    const vp8Header = 'VP8' === buffer.toString('ascii', 12, 15);\n    return riffHeader && webpHeader && vp8Header;\n  },\n  calculate(buffer) {\n    const chunkHeader = buffer.toString('ascii', 12, 16);\n    buffer = buffer.slice(20, 30);\n    // Extended webp stream signature\n    if (chunkHeader === 'VP8X') {\n      const extendedHeader = buffer[0];\n      const validStart = (extendedHeader & 0xc0) === 0;\n      const validEnd = (extendedHeader & 0x01) === 0;\n      if (validStart && validEnd) {\n        return calculateExtended(buffer);\n      } else {\n        // TODO: breaking change\n        throw new TypeError('Invalid WebP');\n      }\n    }\n    // Lossless webp stream signature\n    if (chunkHeader === 'VP8 ' && buffer[0] !== 0x2f) {\n      return calculateLossy(buffer);\n    }\n    // Lossy webp stream signature\n    const signature = buffer.toString('hex', 3, 6);\n    if (chunkHeader === 'VP8L' && signature !== '9d012a') {\n      return calculateLossless(buffer);\n    }\n    throw new TypeError('Invalid WebP');\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","WEBP","calculateExtended","buffer","height","readUIntLE","width","calculateLossless","calculateLossy","readInt16LE","validate","riffHeader","toString","webpHeader","vp8Header","calculate","chunkHeader","slice","extendedHeader","validStart","validEnd","TypeError","signature"],"sources":["/Users/admin/project/redichan_frontend/node_modules/image-size/dist/types/webp.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WEBP = void 0;\nfunction calculateExtended(buffer) {\n    return {\n        height: 1 + buffer.readUIntLE(7, 3),\n        width: 1 + buffer.readUIntLE(4, 3)\n    };\n}\nfunction calculateLossless(buffer) {\n    return {\n        height: 1 + (((buffer[4] & 0xF) << 10) | (buffer[3] << 2) | ((buffer[2] & 0xC0) >> 6)),\n        width: 1 + (((buffer[2] & 0x3F) << 8) | buffer[1])\n    };\n}\nfunction calculateLossy(buffer) {\n    // `& 0x3fff` returns the last 14 bits\n    // TO-DO: include webp scaling in the calculations\n    return {\n        height: buffer.readInt16LE(8) & 0x3fff,\n        width: buffer.readInt16LE(6) & 0x3fff\n    };\n}\nexports.WEBP = {\n    validate(buffer) {\n        const riffHeader = 'RIFF' === buffer.toString('ascii', 0, 4);\n        const webpHeader = 'WEBP' === buffer.toString('ascii', 8, 12);\n        const vp8Header = 'VP8' === buffer.toString('ascii', 12, 15);\n        return (riffHeader && webpHeader && vp8Header);\n    },\n    calculate(buffer) {\n        const chunkHeader = buffer.toString('ascii', 12, 16);\n        buffer = buffer.slice(20, 30);\n        // Extended webp stream signature\n        if (chunkHeader === 'VP8X') {\n            const extendedHeader = buffer[0];\n            const validStart = (extendedHeader & 0xc0) === 0;\n            const validEnd = (extendedHeader & 0x01) === 0;\n            if (validStart && validEnd) {\n                return calculateExtended(buffer);\n            }\n            else {\n                // TODO: breaking change\n                throw new TypeError('Invalid WebP');\n            }\n        }\n        // Lossless webp stream signature\n        if (chunkHeader === 'VP8 ' && buffer[0] !== 0x2f) {\n            return calculateLossy(buffer);\n        }\n        // Lossy webp stream signature\n        const signature = buffer.toString('hex', 3, 6);\n        if (chunkHeader === 'VP8L' && signature !== '9d012a') {\n            return calculateLossless(buffer);\n        }\n        throw new TypeError('Invalid WebP');\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}