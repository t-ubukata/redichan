{"ast":null,"code":"var _jsxFileName = \"/Users/admin/project/redichan_frontend/src/StartThread.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport RedichanNav from 'RedichanNav';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'StartThread.css';\nimport Stack from 'react-bootstrap/Stack';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StartThread = props => {\n  _s();\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const [data, setData] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"StartThread mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(RedichanNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      className: \"mb-5\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(async inputData => {\n            const typedInputData = inputData;\n            const postData = {\n              boardName: \"enNews\",\n              userName: \"\",\n              text: inputData.text\n            };\n            await fetch('http://localhost:4000/api/thread', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(postData)\n            });\n          }),\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              ...register('text')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"close-button\",\n                \"aria-label\": \"close\",\n                type: \"button\",\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(StartThread, \"K24D+q8JCpYnhqQIfaJqXstEmpk=\", false, function () {\n  return [useForm];\n});\n_c = StartThread;\nexport default StartThread;\nvar _c;\n$RefreshReg$(_c, \"StartThread\");","map":{"version":3,"names":["useState","useForm","RedichanNav","Stack","Container","Row","Col","StartThread","props","register","handleSubmit","data","setData","inputData","typedInputData","postData","boardName","userName","text","fetch","method","headers","body","JSON","stringify"],"sources":["/Users/admin/project/redichan_frontend/src/StartThread.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport RedichanNav from 'RedichanNav';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'StartThread.css';\nimport consola from 'consola';\nimport Stack from 'react-bootstrap/Stack';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\ninterface Props {\n  boardName: string;\n}\n\ninterface InputData {\n  text: string;\n}\nconst StartThread = (props: Props): JSX.Element => {\n  const { register, handleSubmit } = useForm();\n  const [data, setData] = useState('');\n\n  return (\n    <div className=\"StartThread mx-auto\">\n      <RedichanNav />\n      <Stack className=\"mb-5\">\n        <Container>\n          <form\n            onSubmit={handleSubmit(async (inputData) => {\n              const typedInputData = inputData as InpurData;\n              const postData = {boardName: \"enNews\",\n                                userName: \"\",\n                                text: inputData.text\n                                }\n              await fetch('http://localhost:4000/api/thread', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(postData)\n              })\n            })}\n          >\n            <Row>\n              <textarea {...register('text')} />\n            </Row>\n            <Row>\n              <Col>\n                <button className=\"close-button\" aria-label=\"close\" type=\"button\">\n                  Close\n                </button>\n              </Col>\n              <Col>\n                <input type=\"submit\" />\n              </Col>\n            </Row>\n          </form>\n        </Container>\n      </Stack>\n    </div>\n  );\n};\n\nexport default StartThread;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,OAAO,QAAQ,iBAAiB;AACzC,OAAOC,WAAW,MAAM,aAAa;AACrC,OAAO,sCAAsC;AAC7C,OAAO,iBAAiB;AAExB,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AAAC;AAStC,MAAMC,WAAW,GAAIC,KAAY,IAAkB;EAAA;EACjD,MAAM;IAAEC,QAAQ;IAAEC;EAAa,CAAC,GAAGT,OAAO,EAAE;EAC5C,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpC,oBACE;IAAK,SAAS,EAAC,qBAAqB;IAAA,wBAClC,QAAC,WAAW;MAAA;MAAA;MAAA;IAAA,QAAG,eACf,QAAC,KAAK;MAAC,SAAS,EAAC,MAAM;MAAA,uBACrB,QAAC,SAAS;QAAA,uBACR;UACE,QAAQ,EAAEU,YAAY,CAAC,MAAOG,SAAS,IAAK;YAC1C,MAAMC,cAAc,GAAGD,SAAsB;YAC7C,MAAME,QAAQ,GAAG;cAACC,SAAS,EAAE,QAAQ;cACnBC,QAAQ,EAAE,EAAE;cACZC,IAAI,EAAEL,SAAS,CAACK;YAChB,CAAC;YACnB,MAAMC,KAAK,CAAC,kCAAkC,EAAE;cAC9CC,MAAM,EAAE,MAAM;cACdC,OAAO,EAAE;gBACP,cAAc,EAAE;cAClB,CAAC;cACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,QAAQ;YAC/B,CAAC,CAAC;UACJ,CAAC,CAAE;UAAA,wBAEH,QAAC,GAAG;YAAA,uBACF;cAAA,GAAcN,QAAQ,CAAC,MAAM;YAAC;cAAA;cAAA;cAAA;YAAA;UAAI;YAAA;YAAA;YAAA;UAAA,QAC9B,eACN,QAAC,GAAG;YAAA,wBACF,QAAC,GAAG;cAAA,uBACF;gBAAQ,SAAS,EAAC,cAAc;gBAAC,cAAW,OAAO;gBAAC,IAAI,EAAC,QAAQ;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YAExD;cAAA;cAAA;cAAA;YAAA,QACL,eACN,QAAC,GAAG;cAAA,uBACF;gBAAO,IAAI,EAAC;cAAQ;gBAAA;gBAAA;gBAAA;cAAA;YAAG;cAAA;cAAA;cAAA;YAAA,QACnB;UAAA;YAAA;YAAA;YAAA;UAAA,QACF;QAAA;UAAA;UAAA;UAAA;QAAA;MACD;QAAA;QAAA;QAAA;MAAA;IACG;MAAA;MAAA;MAAA;IAAA,QACN;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV,CAAC;AAAC,GA3CIF,WAAW;EAAA,QACoBN,OAAO;AAAA;AAAA,KADtCM,WAAW;AA6CjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}