{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.readUInt = void 0;\n// Abstract reading multi-byte unsigned integers\nfunction readUInt(buffer, bits, offset, isBigEndian) {\n  offset = offset || 0;\n  const endian = isBigEndian ? 'BE' : 'LE';\n  const methodName = 'readUInt' + bits + endian;\n  return buffer[methodName].call(buffer, offset);\n}\nexports.readUInt = readUInt;","map":{"version":3,"names":["Object","defineProperty","exports","value","readUInt","buffer","bits","offset","isBigEndian","endian","methodName","call"],"sources":["/Users/admin/project/redichan_frontend/node_modules/image-size/dist/readUInt.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readUInt = void 0;\n// Abstract reading multi-byte unsigned integers\nfunction readUInt(buffer, bits, offset, isBigEndian) {\n    offset = offset || 0;\n    const endian = isBigEndian ? 'BE' : 'LE';\n    const methodName = ('readUInt' + bits + endian);\n    return buffer[methodName].call(buffer, offset);\n}\nexports.readUInt = readUInt;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,QAAQ,GAAG,KAAK,CAAC;AACzB;AACA,SAASA,QAAQ,CAACC,MAAM,EAAEC,IAAI,EAAEC,MAAM,EAAEC,WAAW,EAAE;EACjDD,MAAM,GAAGA,MAAM,IAAI,CAAC;EACpB,MAAME,MAAM,GAAGD,WAAW,GAAG,IAAI,GAAG,IAAI;EACxC,MAAME,UAAU,GAAI,UAAU,GAAGJ,IAAI,GAAGG,MAAO;EAC/C,OAAOJ,MAAM,CAACK,UAAU,CAAC,CAACC,IAAI,CAACN,MAAM,EAAEE,MAAM,CAAC;AAClD;AACAL,OAAO,CAACE,QAAQ,GAAGA,QAAQ"},"metadata":{},"sourceType":"script"}